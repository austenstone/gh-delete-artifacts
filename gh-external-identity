#!/usr/bin/env bash
set -e

# function to get help information
function help {
  echo '
  Usage: gh-external-identity [options]

  Options:
    -o, --org <org>              The organization to query for external identities
    -e, --enterprise <enterprise> The enterprise to query for external identities
    -h, --help                   Display help information
  '
  exit 0
}

login=""
while [ $# -gt 0 ]; do
  case "$1" in
  -o|--org)
    org="$2"
    ;;
  -e|--enterprise)
    enterprise="$2"
    ;;
  -h|--help)
    help
    ;;
  esac
  shift
done

if [ -z "$org" ] && [ -z "$enterprise" ]
then
  help
fi

QUERY='
  query getResource($endCursor: String, $organization: String!) {
    organization(login: $organization) {
      samlIdentityProvider {
        ssoUrl
        externalIdentities(first: 100, after: $endCursor) {
          nodes {
            scimIdentity {
              username
            }
            samlIdentity {
              nameId
            }
            user {
              login
              email
            }
          }
        }
      }
    }
  }
'

ENTERPRISE_QUERY=QUERY='
  query getResource($endCursor: String, $enterprise: String!) {
    enterprise(slug: $enterprise) {
      ownerInfo {
        samlIdentityProvider {
          ssoUrl
          externalIdentities(first: 100, after: $endCursor) {
            totalCount
            pageInfo {
              hasNextPage
              endCursor
            }
            nodes {
              samlIdentity {
                nameId
              }
              user {
                login
                name
                email
              }
            }
          }
        }
      }
    }
  }
'
TEMPLATE='
  {{- if $.data.organization.samlIdentityProvider }}
    {{- range $externalIdentity := .data.organization.samlIdentityProvider.nodes -}}
      {{- printf "email: %s - name: %s $s\n" $externalIdentity.scimIdentity.username $externalIdentity.samlIdentity.givenName $externalIdentity.samlIdentity.familyName -}}
    {{- end -}}
  {{- else }}
    {{ printf "No external identities found\n" }}
  {{- end }}  
'

ENTERPRISE_TEMPLATE='
  {{- if $.data.enterprise.ownerInfo.samlIdentityProvider }}
    {{- range $externalIdentity := .data.enterprise.ownerInfo.samlIdentityProvider.nodes -}}
      {{- printf "email: %s - name: %s $s\n" $externalIdentity.scimIdentity.username $externalIdentity.samlIdentity.givenName $externalIdentity.samlIdentity.familyName -}}
    {{- end -}}
  {{- else }}
    {{ printf "No external identities found\n" }}
  {{- end }}
'

echo "Querying for external identities for ${org||enterprise}"
if [ -z "$enterprise" ]
then
  gh api graphql -F organization="${org}" -f query="${QUERY}" --paginate --template="${TEMPLATE}"
else
  gh api graphql -F enterprise="${enterprise}" -f query="${ENTERPRISE_QUERY}" --paginate --template="${ENTERPRISE_TEMPLATE}"
fi
