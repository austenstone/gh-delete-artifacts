#!/usr/bin/env bash
set -e

# function to get help information
function help {
  echo '
  Usage: external-identity [options]

  Options:
    -o, --org <org>               The organization to query for external identities
    -e, --enterprise <enterprise> The enterprise to query for external identities
    -h, --help                    Display help information
  '
  exit 0
}

login=""
while [ $# -gt 0 ]; do
  case "$1" in
  -o|--org)
    org="$2"
    ;;
  -e|--enterprise)
    enterprise="$2"
    ;;
  -h|--help)
    help
    ;;
  esac
  shift
done

if [ -z "$org" ] && [ -z "$enterprise" ]
then
  help
fi

QUERY='
  query getResource($endCursor: String, $organization: String!) {
    organization(login: $organization) {
      samlIdentityProvider {
        ssoUrl
        externalIdentities(first: 100, after: $endCursor) {
          nodes {
            samlIdentity {
              nameId
            }
            user {
              login
              name
              email
            }
          }
        }
      }
    }
  }
'

ENTERPRISE_QUERY='
  query getResource($endCursor: String, $enterprise: String!) {
    enterprise(slug: $enterprise) {
      ownerInfo {
        samlIdentityProvider {
          ssoUrl
          externalIdentities(first: 100, after: $endCursor) {
            totalCount
            pageInfo {
              hasNextPage
              endCursor
            }
            nodes {
              samlIdentity {
                nameId
              }
              user {
                login
                name
                email
              }
            }
          }
        }
      }
    }
  }
'

auth_status=$(gh auth status)
if [ -z "$enterprise" ]
then
  if [ -z "$(echo $auth_status | grep "user:email")" ] || [ -z "$(echo $auth_status | grep "read:user")" ]
  then
    echo "Please run 'gh auth refresh --scopes user:email,read:user'"
    gh auth refresh --scopes user:email,read:user
  fi
  echo "Querying org: $org"
  gh api graphql -F organization="${org}" -f query="${QUERY}" --paginate
else
  if [ -z "$(echo $auth_status | grep "read:enterprise")" ]
  then
    echo "Please run 'gh auth refresh --scopes read:enterprise'"
    gh auth refresh --scopes read:enterprise
  fi
  echo "Querying enterprise: $enterprise"
  gh api graphql -F enterprise="${enterprise}" -f query="${ENTERPRISE_QUERY}" --paginate
fi

